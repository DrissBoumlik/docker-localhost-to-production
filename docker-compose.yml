version: '3'

services:
  simple-page:
    build: ./simple-page
    env_file: .env
    image: swoldanski/docker-l2p-simple-page:${VERSION:-0.1.19}
    deploy:
      replicas: 5
    ports:
      - 80:80
  
  ping-broker:
    build: ./ping-broker
    env_file: .env
    image: swoldanski/docker-l2p-ping-broker:${VERSION:-0.1.19}
    deploy:
      replicas: 2
    ports:
      - 8000:80
  
  rabbit-master:
    image: rabbitmq:3-management
    env_file: .env
    deploy:
      replicas: 1
    ports:
      - 9000:15672
  
  rabbit-backup:
    image: rabbitmq:3-management
    env_file: .env
    deploy:
      replicas: 1
      resources:
        limits:
            cpus: '0.5'
            memory: 512M
    ports:
      - 9001:15672

  producer:
    build: ./producer
    image: swoldanski/docker-l2p-producer:${VERSION:-0.1.19}
    env_file: .env
    deploy:
      replicas: 3

  consumer:
    build: ./consumer
    image: swoldanski/docker-l2p-consumer:${VERSION:-0.1.19}
    env_file: .env
    deploy:
      replicas: 2
    

# infra & monitoring - take care, for production use you need rexternal authentication for most of them ;)

  cadvisor:
    image: google/cadvisor
    ports:
      - 10000:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global

  portainer:
    image: portainer/portainer
    ports:
      - 10001:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

volumes:
  portainer-data:
